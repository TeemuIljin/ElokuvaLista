package genre;

import java.io.*;

import static kanta.HetuTarkistus.*;

/**
 * Luokka genren tarkistamiseen
 * @author iljitesa
 * @version 9.3.2024
 */


public class Jasen {
    private int        tunnusNro;
    private String     nimi           = "";
    private String     hetu           = "";
    private String     katuosoite     = "";
    private String     postinumero    = "";
    private String     postiosoite    = "";
    private String     kotipuhelin    = "";
    private String     tyopuhelin     = "";
    private String     autopuhelin    = "";
    private int        liittymisvuosi = 0;
    private double     jmaksu         = 0;
    private double     maksu          = 0;
    private String     lisatietoja    = "";

    private static int seuraavaNro    = 1;


    /**
     * @return jäsenen nimi
     * @example
     * <pre name="test">
     *   Jasen aku = new Jasen();
     *   aku.vastaaAkuAnkka();
     *   aku.getNimi() =R= "Ankka Aku .*";
     * </pre>
     */
    public String getNimi() {
        return nimi;
    }


    /**
     * Apumetodi, jolla saadaan täytettyä testiarvot jäsenelle.
     * @param apuhetu hetu joka annetaan henkilölle
     */
    public void vastaaAkuAnkka(String apuhetu) {
        nimi = "Ankka Aku " + rand(1000, 9999);
        hetu = apuhetu;
        katuosoite = "Paratiisitie 13";
        postinumero = "12345";
        postiosoite = "ANKKALINNA";
        kotipuhelin = "12-1234";
        tyopuhelin = "";
        autopuhelin = "";
        liittymisvuosi = 1996;
        jmaksu = 50.00;
        maksu = 30.00;
        lisatietoja = "Velkaa Roopelle";
    }


    /**
     * Apumetodi, jolla saadaan täytettyä testiarvot jäsenelle.
     * Henkilötunnus arvotaan, jotta kahdella jäsenellä ei olisi
     * samoja tietoja.
     */
    public void vastaaAkuAnkka() {
        String apuhetu = arvoHetu();
        vastaaAkuAnkka(apuhetu);
    }


    /**
     * Tulostetaan henkilön tiedot
     * @param out tietovirta johon tulostetaan
     */
    public void tulosta(PrintStream out) {
        out.println(String.format("%03d", tunnusNro, 3) + "  " + nimi + "  "
                + hetu);
        out.println("  " + katuosoite + "  " + postinumero + " " + postiosoite);
        out.println("  k: " + kotipuhelin +
                " t: " + tyopuhelin +
                " a: " + autopuhelin);
        out.print("  Liittynyt " + liittymisvuosi + ".");
        out.println("  Jäsenmaksu " + String.format("%4.2f", jmaksu) + " e." +
                "  Maksettu " + String.format("%4.2f", maksu) + " e.");
        out.println("  " + lisatietoja);
    }


    /**
     * Tulostetaan henkilön tiedot
     * @param os tietovirta johon tulostetaan
     */
    public void tulosta(OutputStream os) {
        tulosta(new PrintStream(os));
    }


    /**
     * Antaa jäsenelle seuraavan rekisterinumeron.
     * @return jäsenen uusi tunnusNro
     * @example
     * <pre name="test">
     *   Jasen aku1 = new Jasen();
     *   aku1.getTunnusNro() === 0;
     *   aku1.rekisteroi();
     *   Jasen aku2 = new Jasen();
     *   aku2.rekisteroi();
     *   int n1 = aku1.getTunnusNro();
     *   int n2 = aku2.getTunnusNro();
     *   n1 === n2-1;
     * </pre>
     */
    public int rekisteroi() {
        tunnusNro = seuraavaNro;
        seuraavaNro++;
        return tunnusNro;
    }


    /**
     * Palauttaa jäsenen tunnusnumeron.
     * @return jäsenen tunnusnumero
     */
    public int getTunnusNro() {
        return tunnusNro;
    }


    /**
     * Testiohjelma jäsenelle.
     * @param args ei käytössä
     */
    public static void main(String args[]) {
        Jasen aku = new Jasen(), aku2 = new Jasen();
        aku.rekisteroi();
        aku2.rekisteroi();
        aku.tulosta(System.out);
        aku.vastaaAkuAnkka();
        aku.tulosta(System.out);

        aku2.vastaaAkuAnkka();
        aku2.tulosta(System.out);

        aku2.vastaaAkuAnkka();
        aku2.tulosta(System.out);
    }

}
